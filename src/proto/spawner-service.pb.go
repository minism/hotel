// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/spawner-service.proto

package hotel_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckStatusRequest) Reset()         { *m = CheckStatusRequest{} }
func (m *CheckStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CheckStatusRequest) ProtoMessage()    {}
func (*CheckStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_028c64f744b4b475, []int{0}
}

func (m *CheckStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckStatusRequest.Unmarshal(m, b)
}
func (m *CheckStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckStatusRequest.Marshal(b, m, deterministic)
}
func (m *CheckStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckStatusRequest.Merge(m, src)
}
func (m *CheckStatusRequest) XXX_Size() int {
	return xxx_messageInfo_CheckStatusRequest.Size(m)
}
func (m *CheckStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckStatusRequest proto.InternalMessageInfo

type CheckStatusResponse struct {
	// The number of currently running game servers managed by the spawner.
	RunningGameServers uint32 `protobuf:"varint,1,opt,name=running_game_servers,json=runningGameServers,proto3" json:"running_game_servers,omitempty"`
	// The maximum number of game servers the spawner can handle.
	MaxGameServers       uint32   `protobuf:"varint,2,opt,name=max_game_servers,json=maxGameServers,proto3" json:"max_game_servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckStatusResponse) Reset()         { *m = CheckStatusResponse{} }
func (m *CheckStatusResponse) String() string { return proto.CompactTextString(m) }
func (*CheckStatusResponse) ProtoMessage()    {}
func (*CheckStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_028c64f744b4b475, []int{1}
}

func (m *CheckStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckStatusResponse.Unmarshal(m, b)
}
func (m *CheckStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckStatusResponse.Marshal(b, m, deterministic)
}
func (m *CheckStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckStatusResponse.Merge(m, src)
}
func (m *CheckStatusResponse) XXX_Size() int {
	return xxx_messageInfo_CheckStatusResponse.Size(m)
}
func (m *CheckStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckStatusResponse proto.InternalMessageInfo

func (m *CheckStatusResponse) GetRunningGameServers() uint32 {
	if m != nil {
		return m.RunningGameServers
	}
	return 0
}

func (m *CheckStatusResponse) GetMaxGameServers() uint32 {
	if m != nil {
		return m.MaxGameServers
	}
	return 0
}

type SpawnServerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpawnServerRequest) Reset()         { *m = SpawnServerRequest{} }
func (m *SpawnServerRequest) String() string { return proto.CompactTextString(m) }
func (*SpawnServerRequest) ProtoMessage()    {}
func (*SpawnServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_028c64f744b4b475, []int{2}
}

func (m *SpawnServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpawnServerRequest.Unmarshal(m, b)
}
func (m *SpawnServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpawnServerRequest.Marshal(b, m, deterministic)
}
func (m *SpawnServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpawnServerRequest.Merge(m, src)
}
func (m *SpawnServerRequest) XXX_Size() int {
	return xxx_messageInfo_SpawnServerRequest.Size(m)
}
func (m *SpawnServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpawnServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpawnServerRequest proto.InternalMessageInfo

type SpawnServerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpawnServerResponse) Reset()         { *m = SpawnServerResponse{} }
func (m *SpawnServerResponse) String() string { return proto.CompactTextString(m) }
func (*SpawnServerResponse) ProtoMessage()    {}
func (*SpawnServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_028c64f744b4b475, []int{3}
}

func (m *SpawnServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpawnServerResponse.Unmarshal(m, b)
}
func (m *SpawnServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpawnServerResponse.Marshal(b, m, deterministic)
}
func (m *SpawnServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpawnServerResponse.Merge(m, src)
}
func (m *SpawnServerResponse) XXX_Size() int {
	return xxx_messageInfo_SpawnServerResponse.Size(m)
}
func (m *SpawnServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SpawnServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SpawnServerResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CheckStatusRequest)(nil), "hotel_pb.CheckStatusRequest")
	proto.RegisterType((*CheckStatusResponse)(nil), "hotel_pb.CheckStatusResponse")
	proto.RegisterType((*SpawnServerRequest)(nil), "hotel_pb.SpawnServerRequest")
	proto.RegisterType((*SpawnServerResponse)(nil), "hotel_pb.SpawnServerResponse")
}

func init() { proto.RegisterFile("proto/spawner-service.proto", fileDescriptor_028c64f744b4b475) }

var fileDescriptor_028c64f744b4b475 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x1b, 0x17, 0x22, 0x57, 0x2c, 0x72, 0x5b, 0x41, 0xaa, 0x82, 0xcc, 0xaa, 0x1b, 0xa3,
	0xe8, 0x23, 0xb8, 0x70, 0xe3, 0xaa, 0xf3, 0x00, 0x61, 0x1a, 0x2e, 0x6d, 0xd1, 0xf9, 0xc9, 0xcc,
	0x44, 0xf3, 0x50, 0x3e, 0xa4, 0x4c, 0xae, 0x81, 0x09, 0xb1, 0xcb, 0x39, 0xe7, 0x70, 0xee, 0x77,
	0x06, 0x6e, 0x9c, 0xb7, 0xd1, 0x3e, 0x06, 0xa7, 0xbe, 0x0d, 0xf9, 0x87, 0x40, 0xfe, 0xeb, 0x50,
	0x53, 0xd9, 0xab, 0x78, 0xb6, 0xb7, 0x91, 0x3e, 0x2b, 0xb7, 0x5d, 0x21, 0xc7, 0x6a, 0xab, 0xb5,
	0x35, 0xec, 0x8a, 0x25, 0xe0, 0xeb, 0x9e, 0xea, 0x0f, 0x19, 0x55, 0x6c, 0xc3, 0x86, 0x9a, 0x96,
	0x42, 0x14, 0x0d, 0x2c, 0x46, 0x6a, 0x70, 0xd6, 0x04, 0xc2, 0x27, 0x58, 0xfa, 0xd6, 0x98, 0x83,
	0xd9, 0x55, 0x3b, 0xa5, 0xa9, 0x4a, 0x87, 0xc8, 0x87, 0xeb, 0xe2, 0xbe, 0x58, 0x5f, 0x6c, 0xf0,
	0xcf, 0x7b, 0x53, 0x9a, 0x24, 0x3b, 0xb8, 0x86, 0x4b, 0xad, 0xba, 0x71, 0xfa, 0xa4, 0x4f, 0xcf,
	0xb5, 0xea, 0xb2, 0x64, 0x02, 0x91, 0x89, 0x9f, 0xdf, 0x03, 0xc8, 0x15, 0x2c, 0x46, 0x2a, 0x83,
	0x3c, 0xff, 0x14, 0x30, 0x97, 0xbc, 0x56, 0xf2, 0x58, 0x7c, 0x87, 0xf3, 0x0c, 0x19, 0x6f, 0xcb,
	0x61, 0x76, 0x39, 0xdd, 0xb7, 0xba, 0x3b, 0xe2, 0x72, 0xbd, 0x98, 0xa5, 0xb6, 0xec, 0x6e, 0xde,
	0x36, 0x85, 0xcc, 0xdb, 0xfe, 0x81, 0x15, 0xb3, 0xed, 0x69, 0xff, 0xd7, 0x2f, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x53, 0x3b, 0x0a, 0xc5, 0xa8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpawnerServiceClient is the client API for SpawnerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpawnerServiceClient interface {
	// Check the current status of the spawner service including asking
	// how many game servers it's currently managing.
	CheckStatus(ctx context.Context, in *CheckStatusRequest, opts ...grpc.CallOption) (*CheckStatusResponse, error)
	// Request that the service spawn a new game server.
	SpawnServer(ctx context.Context, in *SpawnServerRequest, opts ...grpc.CallOption) (*SpawnServerResponse, error)
}

type spawnerServiceClient struct {
	cc *grpc.ClientConn
}

func NewSpawnerServiceClient(cc *grpc.ClientConn) SpawnerServiceClient {
	return &spawnerServiceClient{cc}
}

func (c *spawnerServiceClient) CheckStatus(ctx context.Context, in *CheckStatusRequest, opts ...grpc.CallOption) (*CheckStatusResponse, error) {
	out := new(CheckStatusResponse)
	err := c.cc.Invoke(ctx, "/hotel_pb.SpawnerService/CheckStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spawnerServiceClient) SpawnServer(ctx context.Context, in *SpawnServerRequest, opts ...grpc.CallOption) (*SpawnServerResponse, error) {
	out := new(SpawnServerResponse)
	err := c.cc.Invoke(ctx, "/hotel_pb.SpawnerService/SpawnServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpawnerServiceServer is the server API for SpawnerService service.
type SpawnerServiceServer interface {
	// Check the current status of the spawner service including asking
	// how many game servers it's currently managing.
	CheckStatus(context.Context, *CheckStatusRequest) (*CheckStatusResponse, error)
	// Request that the service spawn a new game server.
	SpawnServer(context.Context, *SpawnServerRequest) (*SpawnServerResponse, error)
}

// UnimplementedSpawnerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpawnerServiceServer struct {
}

func (*UnimplementedSpawnerServiceServer) CheckStatus(ctx context.Context, req *CheckStatusRequest) (*CheckStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckStatus not implemented")
}
func (*UnimplementedSpawnerServiceServer) SpawnServer(ctx context.Context, req *SpawnServerRequest) (*SpawnServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SpawnServer not implemented")
}

func RegisterSpawnerServiceServer(s *grpc.Server, srv SpawnerServiceServer) {
	s.RegisterService(&_SpawnerService_serviceDesc, srv)
}

func _SpawnerService_CheckStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpawnerServiceServer).CheckStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotel_pb.SpawnerService/CheckStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpawnerServiceServer).CheckStatus(ctx, req.(*CheckStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpawnerService_SpawnServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SpawnServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpawnerServiceServer).SpawnServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotel_pb.SpawnerService/SpawnServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpawnerServiceServer).SpawnServer(ctx, req.(*SpawnServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpawnerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hotel_pb.SpawnerService",
	HandlerType: (*SpawnerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckStatus",
			Handler:    _SpawnerService_CheckStatus_Handler,
		},
		{
			MethodName: "SpawnServer",
			Handler:    _SpawnerService_SpawnServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/spawner-service.proto",
}
